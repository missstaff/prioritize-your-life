// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AppThemedTouchableOpacity Tests renders correctly when disabled 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#CD03EF",
      "borderRadius": 10.714285714285714,
      "marginBottom": 21.428571428571427,
      "opacity": 1,
      "padding": 21.428571428571427,
      "width": "80%",
    }
  }
>
  <Text
    style={
      [
        {
          "color": "#ECEDEE",
        },
        {
          "fontSize": 34.285714285714285,
          "lineHeight": 51.42857142857143,
        },
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "color": "#fff",
          },
          undefined,
        ],
      ]
    }
  >
    Disabled Button
  </Text>
</View>
`;

exports[`AppThemedTouchableOpacity Tests renders correctly with custom styles 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "red",
      "borderRadius": 10.714285714285714,
      "marginBottom": 21.428571428571427,
      "opacity": 1,
      "padding": 21.428571428571427,
      "width": "80%",
    }
  }
>
  <Text
    style={
      [
        {
          "color": "#ECEDEE",
        },
        {
          "fontSize": 34.285714285714285,
          "lineHeight": 51.42857142857143,
        },
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "color": "#fff",
          },
          {
            "fontSize": 20,
          },
        ],
      ]
    }
  >
    Custom Button
  </Text>
</View>
`;

exports[`AppThemedTouchableOpacity Tests renders correctly with default props 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#CD03EF",
      "borderRadius": 10.714285714285714,
      "marginBottom": 21.428571428571427,
      "opacity": 1,
      "padding": 21.428571428571427,
      "width": "80%",
    }
  }
>
  <Text
    style={
      [
        {
          "color": "#ECEDEE",
        },
        {
          "fontSize": 34.285714285714285,
          "lineHeight": 51.42857142857143,
        },
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "color": "#fff",
          },
          undefined,
        ],
      ]
    }
  >
    Click Me
  </Text>
</View>
`;
